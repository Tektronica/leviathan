{%- macro command_write_loop() -%}
	{% for cmd in commands -%}
        {% if cmd[choice] != '' -%}
            {% if cmd['variable'] != '' -%}
                {{"\n"}}{{ cmd['variable'] }} = average_reading({{ cmd['choice'] }}, {{ cmd['code'] }})
            {%- else -%}
                {{"\n"}}{{ cmd['choice'] }}.write({{ cmd['code'] }})
            {%- endif -%}
        {% else -%}
            {{"\n"}}# {{ cmd['code'] }}
        {%- endif %}
    {%- endfor -%}
	{{ caller() }}
{%- endmacro %}

{%- macro run_write_loop() -%}
    {% for key in data.keys() -%}
        {{ "\n" }}_{{ key }} = {{ data[key] }}
    {%- endfor -%}

    {{ "\n\n" }}# Note that if x and y are not the same length, zip will truncate to the shortest list.

    {%- if not permutate -%}
        {{ "\n" }}for {{ ', '.join(data.keys()) }} in zip(_{{ ', _'.join(data.keys()) }}):
        {%- filter indent(4) -%}
            {% call command_write_loop() %}{% endcall %}
        {%- endfilter %}

    {%- else -%}
        {%- for key in data.keys() -%}
            {%- set level = loop.index0 -%}
            {% filter indent(level*4) -%}
                {{ "\n" }}for {{ key }} in _{{ key }}:
            {%- endfilter %}
        {%- endfor -%}
        {% filter indent(data.keys()|length*4) -%}
            {% call command_write_loop() %}{% endcall %}
        {%- endfilter %}
    {%- endif %}
	{{ caller() }}
{%- endmacro -%}

import pyunivisa
import csv
import sys
import time
import numpy as np


# FOLDER SETUP ---------------------------------------------------------------------------------------------------------
Path('results').mkdir(parents=True, exist_ok=True)
filename = 'test'
path_to_file = f'results\\{filename}_{time.strftime("%Y%m%d_%H%M")}'


# ESTABLISH COMMUNICATION TO INSTRUMENTS -------------------------------------------------------------------------------
f5560A_ip = '129.196.136.130'
k34461A_ip = '10.205.92.67'
f8846A_ip = '10.205.92.248'
f5790A_ip = '6'  # this is its GPIB address


# FOLDER SETUP ---------------------------------------------------------------------------------------------------------
Path('results').mkdir(parents=True, exist_ok=True)
filename = 'test'
path_to_file = f'results\\{filename}_{time.strftime("%Y%m%d_%H%M")}'


# ESTABLISH COMMUNICATION TO INSTRUMENTS -------------------------------------------------------------------------------
f5560A_ip = '129.196.136.130'
k34461A_ip = '10.205.92.67'
f8846A_ip = '10.205.92.248'
f5790A_ip = '6'  # this is its GPIB address


# FILE PATH TO SAVE CSV ------------------------------------------------------------------------------------------------
csv_path = 'output\\csv\\'
fig_path = 'output\\figures\\'


# FUNCTION DEFINITIONS -------------------------------------------------------------------------------------------------
def average_reading(instrument, cmd):
	time.sleep(2)
    for idx in range(samples):
        data.append(float(instrument.read(cmd).split(',')[0]))
        time.sleep(0.20)
    array = np.asarray(data)
    mean = array.mean()
    std = np.sqrt(np.mean(abs(array - mean) ** 2))
    return mean, std


# RUN FUNCTION ---------------------------------------------------------------------------------------------------------
def run():
    {%- filter indent(4) -%}
        {%- call run_write_loop() %}{% endcall -%}
    {%- endfilter %}


if __name__ == "__main__":
	run(){{"\n"}}
